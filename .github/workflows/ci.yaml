name: CI Pipeline

on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop

jobs:
  format-lint:
    name: Format and Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Makefile targets
        run: |
          make format
          make lint

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: format-lint

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Makefile targets
        run: make test

  docker-test:
    name: Run Tests in Docker
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and run Docker container for testing
        run: make docker-test

  docker-run:
    name: Docker Run and Health Check
    runs-on: ubuntu-latest
    needs: docker-test

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build and run Docker container
        env:
          DB_HOST: localhost
          DB_PORT: 5432
          DB_USER: postgres
          DB_PASSWORD: postgres
          DB_NAME: test_db
        run: |
          docker build -t user_service .
          docker run --rm -d -p 8000:8000 \
            --network="host"\
            -e DB_HOST=$DB_HOST \
            -e DB_PORT=$DB_PORT \
            -e DB_USER=$DB_USER \
            -e DB_PASSWORD=$DB_PASSWORD \
            -e DB_NAME=$DB_NAME \
            user_service
          sleep 5


      - name: Health check via curl
        run: |
          curl --fail http://localhost:8000/ping || exit 1

  docker-compose:
    name: Docker-Compose Run and health check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2

      - name: Create .env file
        uses: SpicyPizza/create-envfile@v2.0
        with:
          envkey_DB_PORT: 5432
          envkey_DB_USER: postgres
          envkey_DB_PASSWORD: postgres
          envkey_DB_NAME: test_db
          envkey_API_PORT: 8000
          file_name: .env

      - name: Run docker compose
        uses: hoverkraft-tech/compose-action@v2.0.1
        with:
          compose-file: "./docker-compose.yml"

      - name: Health check via curl
        run: |
          sleep 5
          curl --fail http://localhost:8000/ping || exit 1